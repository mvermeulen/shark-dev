# Basic ROCm development based on install script
#
ARG base_docker=ubuntu:22.04
FROM ${base_docker}

ARG install_script="https://repo.radeon.com/amdgpu-install/5.7.2/ubuntu/jammy/amdgpu-install_5.7.50702-1_all.deb"

ENV PATH=/opt/rocm/llvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/bin
ENV DEBIAN_FRONTEND=noninteractive

ENV WORKDIR=/workdir
WORKDIR /workdir

RUN echo "APT::Get::Assume-Yes \"true\";\n" >> /etc/apt/apt.conf.d/answer-yes

# Fix up python alternatives to enable python3.11 because it is required by SHARK
RUN apt update && apt install -y python3 python3.10 python3.11
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2
RUN update-alternatives --set python3 /usr/bin/python3.11

# Install python3 packages after the default python has been changed
RUN apt update && apt install -y wget git cmake time build-essential python3-pip python3-setuptools python3-numpy python3-dev python3.11-dev
# Workaround, create link for /usr/include/python3.11/numpy (not sure where this is created)
RUN ln -s /usr/lib/python3/dist-packages/numpy/core/include/numpy /usr/include/python3.11/numpy

RUN wget ${install_script}

RUN apt install -y ./`basename ${install_script}`
# RUN amdgpu-install --vulkan=pro --usecase=rocmdev,graphics,mlsdk --accept-eula --no-dkms
RUN amdgpu-install --usecase=rocmdev,graphics,mlsdk --accept-eula --no-dkms

# ROCm packages installed after repository is set up
RUN apt install -y half

